Index: src/main/java/BGU/Group13B/backend/User/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package BGU.Group13B.backend.User;\r\n\r\n\r\nimport BGU.Group13B.backend.Repositories.Interfaces.IMessageRepository;\r\nimport BGU.Group13B.backend.Repositories.Interfaces.IPurchaseHistoryRepository;\r\nimport BGU.Group13B.backend.storePackage.Market;\r\nimport BGU.Group13B.backend.storePackage.Review;\r\nimport BGU.Group13B.backend.storePackage.permissions.NoPermissionException;\r\nimport BGU.Group13B.service.SingletonCollection;\r\n//eyal import\r\nimport java.util.regex.Pattern;\r\n\r\npublic class User {\r\n    private final IPurchaseHistoryRepository purchaseHistoryRepository;\r\n\r\n    private final int userId;\r\n    private final IMessageRepository messageRepository;\r\n    private final UserPermissions userPermissions;\r\n    private final Cart cart;\r\n    private final Market market;\r\n    private int messageId;\r\n    private String userName;\r\n    private Message currentMessageToReply;\r\n    private String password;\r\n    //eyal addition\r\n    private volatile boolean isLoggedIn;\r\n\r\n    private final String adminIdentifier = \"admin\";\r\n\r\n\r\n    public User(int userId) {\r\n\r\n        this.purchaseHistoryRepository = SingletonCollection.getPurchaseHistoryRepository();\r\n        this.userId = userId;\r\n        this.messageRepository = SingletonCollection.getMessageRepository();\r\n        this.userPermissions = new UserPermissions();\r\n        this.cart = new Cart(userId);\r\n        this.market = SingletonCollection.getMarket();\r\n        this.isLoggedIn = false;\r\n    }\r\n\r\n\r\n    public boolean isLoggedIn() {\r\n        return isLoggedIn;\r\n    }\r\n\r\n\r\n    public boolean isRegistered() {\r\n        return this.userPermissions.getUserPermissionStatus() == UserPermissions.UserPermissionStatus.MEMBER ||\r\n                this.userPermissions.getUserPermissionStatus() == UserPermissions.UserPermissionStatus.ADMIN;\r\n    }\r\n\r\n    public boolean isAdmin() {\r\n        return this.userPermissions.getUserPermissionStatus() == UserPermissions.UserPermissionStatus.ADMIN;\r\n    }\r\n\r\n    //#15\r\n    //returns User on success (for future functionalities)\r\n    public User register(String userName, String password, String email) {\r\n        String usernameRegex = \"^[a-zA-Z0-9_-]{4,16}$\"; // 4-16 characters, letters/numbers/underscore/hyphen\r\n        String passwordRegex = \"^(?=.*[A-Z])(?=.*[a-z])(?=.*\\\\d)[A-Za-z\\\\d]{8,}$\"; // need at least 8 characters, 1 uppercase, 1 lowercase, 1 number)\r\n        String emailRegex = \"^(?=.{1,64}@)[A-Za-z0-9_-]+(\\\\\\\\.[A-Za-z0-9_-]+)*@[^-][A-Za-z0-9-]+(\\\\\\\\.[A-Za-z0-9-]+)*(\\\\\\\\.[A-Za-z]{2,})$\"; // checks email validation\r\n        if (!Pattern.matches(usernameRegex, userName)) {\r\n            throw new IllegalArgumentException(\"Invalid username. Username must be 4-16 characters long and can only contain letters, numbers, underscores, or hyphens.\");\r\n        }\r\n        if (!Pattern.matches(passwordRegex, password)) {\r\n            throw new IllegalArgumentException(\"Invalid password. at least 8 characters, 1 uppercase, 1 lowercase, 1 number\");\r\n        }\r\n        if (!Pattern.matches(emailRegex, email)) {\r\n            throw new IllegalArgumentException(\"Invalid email.\");\r\n        }\r\n        this.userName = userName;\r\n        this.password = password;\r\n        this.userPermissions.register();\r\n        return this;\r\n    }\r\n\r\n    public void login(String userName, String password) {\r\n        //second username check for security\r\n        if (this.userName.equals(userName) && this.password.equals(password)) {\r\n            this.isLoggedIn = true;\r\n            return;\r\n        }\r\n        throw new IllegalArgumentException(\"incorrect username or password\");\r\n    }\r\n\r\n    public String getUserName() {\r\n        return userName;\r\n    }\r\n\r\n\r\n\r\n    //#28\r\n    public void openComplaint(String header,String complaint) throws NoPermissionException {\r\n        if (!isRegistered())\r\n            throw new NoPermissionException(\"Only registered users can open complaints\");\r\n        messageRepository.sendMassage( Message.constractMessage(this.userName,messageId, header,complaint , \"Admin\"));\r\n    }\r\n\r\n    //#47\r\n    public Message getComplaint() throws NoPermissionException{\r\n        if(!isAdmin())\r\n            throw new NoPermissionException(\"Only admin can read complaints\");\r\n       return messageRepository.readUnreadMassage(adminIdentifier);\r\n    }\r\n    //#47\r\n    public void markMessageAsRead(String receiverId,String senderId,int messageId)  throws NoPermissionException{\r\n        if(!isAdmin())\r\n            throw new NoPermissionException(\"Only admin can mark as read complaints\");\r\n\r\n        messageRepository.markAsRead(receiverId,senderId,messageId);\r\n    }\r\n    //#47\r\n    public void sendMassageAdmin(String receiverId,String header,String massage) throws NoPermissionException {\r\n        if(!isAdmin())\r\n            throw new NoPermissionException(\"Only admin can send massages\");\r\n        messageRepository.sendMassage(Message.constractMessage(this.userName,messageId, header,massage , receiverId));\r\n    }\r\n    //#47\r\n    public void answerComplaint(String answer) throws NoPermissionException{\r\n        if(!isAdmin())\r\n            throw new NoPermissionException(\"Only admin can answer complaints\");\r\n        messageRepository.markAsRead(currentMessageToReply.getReceiverId(),currentMessageToReply.getSenderId(),currentMessageToReply.getMessageId());\r\n        messageRepository.sendMassage(Message.constractMessage(this.userName,messageId, \"RE: \"+ currentMessageToReply.getHeader(),answer , currentMessageToReply.getSenderId()));\r\n    }\r\n\r\n    public Message readMassage(String receiverId) throws NoPermissionException {\r\n        if(!isRegistered())\r\n            throw new NoPermissionException(\"Only registered users can read massages\");\r\n\r\n        Message message=  messageRepository.readReadMassage(receiverId);\r\n        messageRepository.markAsRead(message.getReceiverId(),message.getSenderId(),message.getMessageId());\r\n        currentMessageToReply=message;\r\n        return message;\r\n    }\r\n\r\n    //27\r\n    public void logout(){\r\n        this.isLoggedIn = false;\r\n    }\r\n\r\n\r\n    public void sendMassageStore(String header,String massage,int storeId) {\r\n        market.sendMassage(Message.constractMessage(this.userName,getAndIncrementMessageId(), header,massage , String.valueOf(storeId)),this.userName,storeId);\r\n    }\r\n    //42\r\n    public Message readUnreadMassageStore(int storeId) throws NoPermissionException {\r\n        Message message= market.getUnreadMessages(this.userName,storeId);\r\n        currentMessageToReply=message;\r\n        return message;\r\n    }\r\n    //42\r\n    public Message readReadMassageStore(int storeId)throws NoPermissionException {\r\n        return market.getUnreadMessages(this.userName,storeId);\r\n    }\r\n    //42\r\n    public void answerQuestionStore(String answer)throws NoPermissionException\r\n    {\r\n        assert currentMessageToReply.getReceiverId().matches(\"-?\\\\d+\");\r\n        market.markAsCompleted(currentMessageToReply.getSenderId(), currentMessageToReply.getMessageId(),this.userName,Integer.parseInt(currentMessageToReply.getReceiverId()));\r\n        messageRepository.sendMassage(Message.constractMessage(this.userName,getAndIncrementMessageId(), \"RE: \"+ currentMessageToReply.getHeader(),answer , currentMessageToReply.getSenderId()));\r\n    }\r\n    //42\r\n    public void refreshOldMessageStore(int storeId)throws NoPermissionException {\r\n        market.refreshMessages(this.userName,storeId);\r\n    }\r\n\r\n    private int getAndIncrementMessageId() {\r\n        return messageId++;\r\n    }\r\n\r\n    //#25\r\n    public void addReview(String review, int storeId, int productId) throws NoPermissionException{\r\n        if(!isRegistered())\r\n            throw new NoPermissionException(\"Only registered users can add reviews\");\r\n        market.addReview(review,storeId,productId,this.userId);\r\n    }\r\n    //#25\r\n    public void removeReview(int storeId, int productId)throws NoPermissionException{\r\n        if(!isRegistered())\r\n            throw new NoPermissionException(\"Only registered users can remove reviews\");\r\n        market.removeReview(storeId,productId,this.userId);\r\n    }\r\n    //#25\r\n    public Review getReview(int storeId, int productId){\r\n        return market.getReview(storeId,productId,this.userId);\r\n    }\r\n    //#26\r\n    public float getProductScore(int storeId,int productId){\r\n        return market.getProductScore(storeId,productId);\r\n    }\r\n\r\n    public void addAndSetProductScore(int storeId, int productId, int score) throws NoPermissionException{\r\n        if(!isRegistered())\r\n            throw new NoPermissionException(\"Only registered users can add scores\");\r\n        market.addAndSetProductScore(storeId,productId,this.userId,score);\r\n    }\r\n    public void removeProductScore(int storeId, int productId)throws NoPermissionException{\r\n        if(!isRegistered())\r\n            throw new NoPermissionException(\"Only registered users can remove scores\");\r\n        market.removeProductScore(storeId,productId,userId);\r\n    }\r\n    public void addStoreScore(int storeId ,int score) throws NoPermissionException{\r\n        if(!isRegistered())\r\n            throw new NoPermissionException(\"Only registered users can add scores to stores\");\r\n        market.addStoreScore(userId,storeId,score);\r\n    }\r\n\r\n    public void removeStoreScore(int storeId) throws NoPermissionException{\r\n        if(!isRegistered())\r\n            throw new NoPermissionException(\"Only registered users can remove scores from stores\");\r\n        market.removeStoreScore(userId,storeId);\r\n    }\r\n\r\n    public void modifyStoreScore(int storeId, int score)throws NoPermissionException{\r\n        if(!isRegistered())\r\n            throw new NoPermissionException(\"Only registered users can modify scores of stores\");\r\n        market.modifyStoreScore(userId,storeId,score);\r\n    }\r\n\r\n    public float getStoreScore(int storeId){\r\n        return market.getStoreScore(storeId);\r\n    }\r\n\r\n    void purchaseCart(String address, String creditCardNumber, String creditCardMonth, String creditCardYear, String creditCardHolderFirstName, String creditCardHolderLastName, String creditCardCcv, String id, String creditCardType) {\r\n        cart.purchaseCart(address, creditCardNumber, creditCardMonth, creditCardYear, creditCardHolderFirstName, creditCardHolderLastName, creditCardCcv, id, creditCardType);\r\n    }\r\n\r\n    public Cart getCart() {\r\n        return cart;\r\n    }\r\n\r\n    public void addProductToCart(int productId, int storeId) throws Exception {\r\n        market.isProductAvailable(productId, storeId);\r\n        cart.addProductToCart(productId, storeId);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/BGU/Group13B/backend/User/User.java b/src/main/java/BGU/Group13B/backend/User/User.java
--- a/src/main/java/BGU/Group13B/backend/User/User.java	(revision 12b5519b6dfc730305b059fda223910780ebbd5e)
+++ b/src/main/java/BGU/Group13B/backend/User/User.java	(date 1682060146054)
@@ -234,4 +234,7 @@
         market.isProductAvailable(productId, storeId);
         cart.addProductToCart(productId, storeId);
     }
+
+
+    
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3436d65a-5e76-4e77-818d-f39d961d7bb1\" name=\"Changes\" comment=\"Done (#53) WITHOUT TESTS.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/BGU/Group13B/service/ProxySession.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/BGU/Group13B/service/ProxySession.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"Record\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-commons/2.4.0/spring-data-commons-2.4.0.jar!/org/springframework/data/util/Pair.class\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2NVL9aAg74nFCBYGHK0CdSKGYHb\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;create.test.in.the.same.root&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;rateProduct__#25&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Shust/OneDrive/Documents/First Degree/Semester 5/Fundamentals of software engineering/Assignment2&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.fonts.default&quot;,\r\n    &quot;spring.configuration.checksum&quot;: &quot;0bff9c3a4f5bac17f71b3dede1d050f7&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"BGU.Group13B.backend.storePackage\" />\r\n      <recent name=\"BGU.Group13B.backend.Repositories.Interfaces\" />\r\n      <recent name=\"BGU.Group13B.backend\" />\r\n      <recent name=\"BGU.Group13B.backend.User\" />\r\n      <recent name=\"BGU.Group13B.backend.Repositories.Implementations.UserRepositoryImpl\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Shust\\OneDrive\\Documents\\First Degree\\Semester6\\Sadna\\trading-system\\src\\main\\java\\BGU\\Group13B\\backend\\Repositories\\Implementations\\StoreRepositoryImpl\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"BGU.Group13B.service\" />\r\n      <recent name=\"BGU.Group13B.backend.storePackage\" />\r\n      <recent name=\"BGU.Group13B\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.StoreTest\">\r\n    <configuration name=\"All in TradingSystemProject\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"TradingSystemProject\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"package\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BGU.Group13B.backend.storePackage in trading-system\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"trading-system\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"BGU.Group13B.backend.storePackage.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"BGU.Group13B.backend.storePackage\" />\r\n      <option name=\"TEST_OBJECT\" value=\"package\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"StoreTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"TradingSystemProject\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"BGU.Group13B.backend.storePackage.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"BGU.Group13B.backend.storePackage\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"BGU.Group13B.backend.storePackage.StoreTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.StoreTest\" />\r\n        <item itemvalue=\"JUnit.BGU.Group13B.backend.storePackage in trading-system\" />\r\n        <item itemvalue=\"JUnit.All in TradingSystemProject\" />\r\n        <item itemvalue=\"JUnit.StoreTest\" />\r\n        <item itemvalue=\"JUnit.All in TradingSystemProject\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3436d65a-5e76-4e77-818d-f39d961d7bb1\" name=\"Changes\" comment=\"\" />\r\n      <created>1679744156433</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1679744156433</updated>\r\n      <workItem from=\"1679744157803\" duration=\"222000\" />\r\n      <workItem from=\"1679745042519\" duration=\"232000\" />\r\n      <workItem from=\"1679745836554\" duration=\"107000\" />\r\n      <workItem from=\"1680599750928\" duration=\"13707000\" />\r\n      <workItem from=\"1680681882942\" duration=\"16736000\" />\r\n      <workItem from=\"1681475547708\" duration=\"1108000\" />\r\n      <workItem from=\"1681476828448\" duration=\"49000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"save work\">\r\n      <created>1680688726166</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680688726166</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"updating  interfaces in order to create the tests infrastructure\">\r\n      <created>1680812708684</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680812708684</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"please review :)\">\r\n      <created>1680813374544</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680813374544</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"adding Discount.java for the use of calculating the price.\">\r\n      <created>1680879711169</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680879711169</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"save work 2\">\r\n      <created>1681378394670</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681378394670</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Done (#53) WITHOUT TESTS.\">\r\n      <created>1681392081418</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681392081418</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"bid_purchase_2.5.4_#53\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"save work\" />\r\n    <MESSAGE value=\"updating  interfaces in order to create the tests infrastructure\" />\r\n    <MESSAGE value=\"please review :)\" />\r\n    <MESSAGE value=\"adding Discount.java for the use of calculating the price.\" />\r\n    <MESSAGE value=\"save work 2\" />\r\n    <MESSAGE value=\"Done (#53) WITHOUT TESTS.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Done (#53) WITHOUT TESTS.\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/trading_system$StoreTest.ic\" NAME=\"StoreTest Coverage Results\" MODIFIED=\"1680968615168\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>BGU.Group13B.backend.storePackage.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/trading_system$Main.ic\" NAME=\"Main Coverage Results\" MODIFIED=\"1680682126010\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>BGU.Group13B.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 4598d2feb32cfbbd3b293906531efc0208441e61)
+++ b/.idea/workspace.xml	(date 1682059960331)
@@ -6,7 +6,6 @@
   <component name="ChangeListManager">
     <list default="true" id="3436d65a-5e76-4e77-818d-f39d961d7bb1" name="Changes" comment="Done (#53) WITHOUT TESTS.">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/BGU/Group13B/service/ProxySession.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/BGU/Group13B/service/ProxySession.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
