Index: src/main/java/BGU/Group13B/service/Session.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package BGU.Group13B.service;\r\n\r\nimport BGU.Group13B.backend.Repositories.Implementations.UserRepositoryImpl.UserRepositoryAsHashmap;\r\nimport BGU.Group13B.backend.System.SystemInfo;\r\nimport BGU.Group13B.backend.Repositories.Implementations.UserRepositoryImpl.UserRepositoryAsHashmap;\r\nimport BGU.Group13B.backend.User.Message;\r\nimport BGU.Group13B.backend.User.User;\r\nimport BGU.Group13B.backend.User.UserPermissions;\r\nimport BGU.Group13B.backend.storePackage.Market;\r\nimport BGU.Group13B.backend.storePackage.Review;\r\nimport BGU.Group13B.backend.storePackage.permissions.NoPermissionException;\r\nimport BGU.Group13B.backend.storePackage.PublicAuctionInfo;\r\n\r\nimport java.time.LocalDateTime;\r\n\r\nimport java.util.List;\r\n\r\n\r\nclass Session implements ISession {\r\n    private final Market market;\r\n    UserRepositoryAsHashmap userRepositoryAsHashmap;\r\n\r\n    public Session(Market market) {\r\n        this.market = market;\r\n\r\n        //callbacks initialization\r\n        SingletonCollection.setAddToUserCart(this::addToCart);\r\n    }\r\n\r\n    @Override\r\n    public void addProduct(int userId, String productName, int quantity, double price, int storeId) throws NoPermissionException {\r\n        market.addProduct(userId, productName, quantity, price, storeId);\r\n    }\r\n\r\n    @Override\r\n    public void addToCart(int userId, int storeId, int productId, int quantity) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void purchaseProductCart(int userId, String address, String creditCardNumber, String creditCardMonth, String creditCardYear, String creditCardHolderFirstName, String creditCardHolderLastName, String creditCardCcv, String id, String creditCardType) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void purchaseProposalSubmit(int userId, int storeId, int productId, double proposedPrice, int amount) {\r\n        try {\r\n            market.purchaseProposalSubmit(userId, storeId, productId, proposedPrice, amount);\r\n        } catch (NoPermissionException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void immediatePurchase(int userId, int storeId, int productId, int quantity) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void createLotteryPurchaseForProduct(int storeManagerId, int storeId, int productId) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void participateInLotteryPurchase(int userId, int storeId, int productId, double fraction) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void createAuctionForProduct(int storeManagerId, int storeId, int productId,\r\n                                        double minPrice, LocalDateTime lastDate) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void auctionPurchase(int userId, int storeId, int productId, double newPrice) {\r\n\r\n    }\r\n    @Override\r\n    public PublicAuctionInfo getAuctionInfo(int userId, int storeId, int productId) {\r\n        return null;\r\n    }\r\n\r\n\r\n    @Override\r\n    public SystemInfo getSystemInformation(int adminId) {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public synchronized void register(int userId, String username, String password,\r\n                                      String email,String answer1,String answer2,String answer3) {\r\n        User user = userRepositoryAsHashmap.getUser(userId);\r\n        try {\r\n            //the first \"if\" might not be necessary when we will connect to web\r\n            if (!user.isRegistered()) {\r\n                if (userRepositoryAsHashmap.checkIfUserExists(username) != null) {\r\n                    user.register(username, password, email,answer1,answer2,answer3);\r\n                } else {\r\n                    System.out.println(\"user with this username already exists!\");\r\n                }\r\n            } else {\r\n                System.out.println(\"already registered!\");\r\n            }\r\n        } catch (Exception e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void searchProductByName(String productName) {\r\n        market.searchProductByName(productName);\r\n    }\r\n\r\n    @Override\r\n    public void searchProductByCategory(String category) {\r\n        market.searchProductByCategory(category);\r\n    }\r\n\r\n    @Override\r\n    public void searchProductByKeywords(List<String> keywords) {\r\n        market.searchProductByKeywords(keywords);\r\n    }\r\n\r\n    @Override\r\n    public void filterByPriceRange(int minPrice, int maxPrice) {\r\n        market.filterByPriceRange(minPrice, maxPrice);\r\n    }\r\n\r\n    @Override\r\n    public void filterByProductRank(int minRating, int maxRating) {\r\n        market.filterByProductRank(minRating, maxRating);\r\n    }\r\n\r\n    @Override\r\n    public void filterByCategory(String category) {\r\n        market.filterByCategory(category);\r\n    }\r\n\r\n    @Override\r\n    public void filterByStoreRank(int minRating, int maxRating) {\r\n        market.filterByStoreRank(minRating, maxRating);\r\n    }\r\n\r\n\r\n    @Override\r\n    public int login(int userID, String username, String password,String answer1,String answer2,String answer3) {\r\n        try {\r\n            //gets the user that we want to log into\r\n            User user = userRepositoryAsHashmap.checkIfUserExists(username);\r\n            synchronized (user) {\r\n                user.login(username, password,answer1,answer2,answer3);\r\n                //removes the current guest profile to swap to the existing member one\r\n                userRepositoryAsHashmap.removeUser(userID);\r\n                //gets the new id - of the user we're logging into\r\n                return userRepositoryAsHashmap.getUserId(user);\r\n            }\r\n        } catch (Exception e) {\r\n            System.out.println(e.getMessage());\r\n            return 0;\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void logout(int userID) {\r\n        synchronized (userRepositoryAsHashmap.getUser(userID)) {\r\n            userRepositoryAsHashmap.getUser(userID).logout();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void addStore(int userId, String storeName, String category) {\r\n        User user = userRepositoryAsHashmap.getUser(userId);\r\n        synchronized (user){\r\n            if(user.isRegistered()){\r\n                try{\r\n                    market.addStore(userId, storeName, category);\r\n                }\r\n                catch(Exception e){\r\n                    //TODO: handle exception\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void addProductToCart(int userId, int productId, int storeId) {\r\n        try{\r\n            userRepositoryAsHashmap.getUser(userId).addProductToCart(productId, storeId);\r\n        }catch (Exception e){\r\n            //TODO: handle exception\r\n           }\r\n    }\r\n\r\n    @Override\r\n    public void getUserPurchaseHistory(int userId) {\r\n        throw new RuntimeException(\"not implemented\");\r\n    }\r\n\r\n    public void openComplaint(int userId, String header, String complaint) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).openComplaint(header, complaint);\r\n        } catch (NoPermissionException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n\r\n    public Message getComplaint(int userId) {\r\n        try {\r\n           return  userRepositoryAsHashmap.getUser(userId).getComplaint();\r\n        } catch (NoPermissionException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void markMessageAsRead(int userId, String receiverId, String senderId, int messageId) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).markMessageAsRead(receiverId, senderId, messageId);\r\n        } catch (NoPermissionException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void sendMassageAdmin(int userId, String receiverId, String header, String massage) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).sendMassageAdmin(receiverId, header, massage);\r\n        } catch (NoPermissionException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void answerComplaint(int userId, String answer) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).answerComplaint(answer);\r\n        } catch (NoPermissionException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Message readMassage(int userId, String receiverId) {\r\n        try {\r\n            return userRepositoryAsHashmap.getUser(userId).readMassage(receiverId);\r\n        } catch (NoPermissionException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void sendMassageStore(int userId, String header, String massage, int storeId) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).sendMassageStore(header, massage, storeId);\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Message readUnreadMassageStore(int userId, int storeId) {\r\n        try {\r\n            return userRepositoryAsHashmap.getUser(userId).readUnreadMassageStore(storeId);\r\n        } catch (NoPermissionException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Message readReadMassageStore(int userId, int storeId) {\r\n        try {\r\n            return userRepositoryAsHashmap.getUser(userId).readReadMassageStore(storeId);\r\n        } catch (NoPermissionException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void answerQuestionStore(int userId, String answer) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).answerQuestionStore(answer);\r\n        } catch (NoPermissionException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void refreshOldMessageStore(int userId, int storeId) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).refreshOldMessageStore(storeId);\r\n        } catch (NoPermissionException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void addReview(int userId, String review, int storeId, int productId) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).addReview(review, storeId, productId);\r\n        } catch (NoPermissionException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void removeReview(int userId, int storeId, int productId) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).removeReview(storeId, productId);\r\n        } catch (NoPermissionException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public Review getReview(int userId, int storeId, int productId) {\r\n        try {\r\n            return userRepositoryAsHashmap.getUser(userId).getReview(storeId, productId);\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public float getProductScore(int userId, int storeId, int productId) {\r\n        try {\r\n            return userRepositoryAsHashmap.getUser(userId).getProductScore(storeId, productId);\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void addAndSetProductScore(int userId, int storeId, int productId, int score) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).addAndSetProductScore(storeId, productId, score);\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void removeProductScore(int userId, int storeId, int productId) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).removeProductScore(storeId, productId);\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void addStoreScore(int userId, int storeId, int score) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).addStoreScore(storeId, score);\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void removeStoreScore(int userId, int storeId) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).removeStoreScore(storeId);\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void modifyStoreScore(int userId, int storeId, int score) {\r\n        try {\r\n            userRepositoryAsHashmap.getUser(userId).modifyStoreScore(storeId, score);\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public float getStoreScore(int userId, int storeId) {\r\n        try {\r\n            return userRepositoryAsHashmap.getUser(userId).getStoreScore(storeId);\r\n        } catch (Exception e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean SecurityAnswer1Exists(int userId) {\r\n        return userRepositoryAsHashmap.getUser(userId).SecurityAnswer1Exists();\r\n    }\r\n\r\n    @Override\r\n    public boolean SecurityAnswer2Exists(int userId) {\r\n        return userRepositoryAsHashmap.getUser(userId).SecurityAnswer2Exists();\r\n    }\r\n\r\n    @Override\r\n    public boolean SecurityAnswer3Exists(int userId) {\r\n        return userRepositoryAsHashmap.getUser(userId).SecurityAnswer3Exists();\r\n    }\r\n\r\n    @Override\r\n    public boolean checkIfQuestionsExist(int userId) {\r\n        return SecurityAnswer1Exists(userId) || SecurityAnswer2Exists(userId) || SecurityAnswer3Exists(userId);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/BGU/Group13B/service/Session.java b/src/main/java/BGU/Group13B/service/Session.java
--- a/src/main/java/BGU/Group13B/service/Session.java	(revision f689dc9201a61d5b4d91d69a467d1544d095986e)
+++ b/src/main/java/BGU/Group13B/service/Session.java	(date 1682077039791)
@@ -1,6 +1,7 @@
 package BGU.Group13B.service;
 
 import BGU.Group13B.backend.Repositories.Implementations.UserRepositoryImpl.UserRepositoryAsHashmap;
+import BGU.Group13B.backend.Repositories.Interfaces.IUserRepository;
 import BGU.Group13B.backend.System.SystemInfo;
 import BGU.Group13B.backend.Repositories.Implementations.UserRepositoryImpl.UserRepositoryAsHashmap;
 import BGU.Group13B.backend.User.Message;
@@ -18,13 +19,15 @@
 
 class Session implements ISession {
     private final Market market;
-    UserRepositoryAsHashmap userRepositoryAsHashmap;
+    IUserRepository userRepositoryAsHashmap;
 
     public Session(Market market) {
         this.market = market;
 
         //callbacks initialization
         SingletonCollection.setAddToUserCart(this::addToCart);
+        this.userRepositoryAsHashmap = SingletonCollection.getUserRepository();
+
     }
 
     @Override
Index: src/test/java/BGU/Group13B/backend/User/UserTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/BGU/Group13B/backend/User/UserTest.java b/src/test/java/BGU/Group13B/backend/User/UserTest.java
new file mode 100644
--- /dev/null	(date 1682076977586)
+++ b/src/test/java/BGU/Group13B/backend/User/UserTest.java	(date 1682076977586)
@@ -0,0 +1,30 @@
+package BGU.Group13B.backend.User;
+
+import org.junit.jupiter.api.AfterEach;
+import org.junit.jupiter.api.BeforeEach;
+import org.junit.jupiter.api.Test;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+class UserTest {
+
+    @BeforeEach
+    void setUp() {
+    }
+
+    @AfterEach
+    void tearDown() {
+    }
+
+    @Test
+    void register() {
+    }
+
+    @Test
+    void login() {
+    }
+
+    @Test
+    void logout() {
+    }
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3436d65a-5e76-4e77-818d-f39d961d7bb1\" name=\"Changes\" comment=\"Done (#53) WITHOUT TESTS.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_39_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_39_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_42_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_42_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_44_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_44_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_50_PM__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_50_PM__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_50_PM__Changes_1.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_50_PM__Changes_1.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"Record\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"HARD\" />\r\n  </component>\r\n  <component name=\"GithubProjectSettings\">\r\n    <option name=\"branchProtectionPatterns\">\r\n      <list>\r\n        <option value=\"master\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"jar://$MAVEN_REPOSITORY$/org/springframework/data/spring-data-commons/2.4.0/spring-data-commons-2.4.0.jar!/org/springframework/data/util/Pair.class\" root0=\"SKIP_INSPECTION\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2NVL9aAg74nFCBYGHK0CdSKGYHb\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;create.test.in.the.same.root&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;rateProduct__#25&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/Shust/OneDrive/Documents/First Degree/Semester 5/Fundamentals of software engineering/Assignment2&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;editor.preferences.fonts.default&quot;,\r\n    &quot;spring.configuration.checksum&quot;: &quot;0bff9c3a4f5bac17f71b3dede1d050f7&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"BGU.Group13B.backend.storePackage\" />\r\n      <recent name=\"BGU.Group13B.backend.Repositories.Interfaces\" />\r\n      <recent name=\"BGU.Group13B.backend\" />\r\n      <recent name=\"BGU.Group13B.backend.User\" />\r\n      <recent name=\"BGU.Group13B.backend.Repositories.Implementations.UserRepositoryImpl\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Shust\\OneDrive\\Documents\\First Degree\\Semester6\\Sadna\\trading-system\\src\\main\\java\\BGU\\Group13B\\backend\\Repositories\\Implementations\\StoreRepositoryImpl\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"BGU.Group13B.service\" />\r\n      <recent name=\"BGU.Group13B.backend.storePackage\" />\r\n      <recent name=\"BGU.Group13B\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"JUnit.StoreTest\">\r\n    <configuration name=\"All in TradingSystemProject\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"TradingSystemProject\" />\r\n      <option name=\"PACKAGE_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"package\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BGU.Group13B.backend.storePackage in trading-system\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"trading-system\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"BGU.Group13B.backend.storePackage.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"BGU.Group13B.backend.storePackage\" />\r\n      <option name=\"TEST_OBJECT\" value=\"package\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"StoreTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"TradingSystemProject\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"BGU.Group13B.backend.storePackage.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"BGU.Group13B.backend.storePackage\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"BGU.Group13B.backend.storePackage.StoreTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.StoreTest\" />\r\n        <item itemvalue=\"JUnit.All in TradingSystemProject\" />\r\n        <item itemvalue=\"JUnit.BGU.Group13B.backend.storePackage in trading-system\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3436d65a-5e76-4e77-818d-f39d961d7bb1\" name=\"Changes\" comment=\"\" />\r\n      <created>1679744156433</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1679744156433</updated>\r\n      <workItem from=\"1679744157803\" duration=\"222000\" />\r\n      <workItem from=\"1679745042519\" duration=\"232000\" />\r\n      <workItem from=\"1679745836554\" duration=\"107000\" />\r\n      <workItem from=\"1680599750928\" duration=\"13707000\" />\r\n      <workItem from=\"1680681882942\" duration=\"16736000\" />\r\n      <workItem from=\"1681475547708\" duration=\"1108000\" />\r\n      <workItem from=\"1681476828448\" duration=\"49000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"save work\">\r\n      <created>1680688726166</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680688726166</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"updating  interfaces in order to create the tests infrastructure\">\r\n      <created>1680812708684</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680812708684</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"please review :)\">\r\n      <created>1680813374544</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680813374544</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"adding Discount.java for the use of calculating the price.\">\r\n      <created>1680879711169</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680879711169</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"save work 2\">\r\n      <created>1681378394670</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681378394670</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Done (#53) WITHOUT TESTS.\">\r\n      <created>1681392081418</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681392081418</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"bid_purchase_2.5.4_#53\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"save work\" />\r\n    <MESSAGE value=\"updating  interfaces in order to create the tests infrastructure\" />\r\n    <MESSAGE value=\"please review :)\" />\r\n    <MESSAGE value=\"adding Discount.java for the use of calculating the price.\" />\r\n    <MESSAGE value=\"save work 2\" />\r\n    <MESSAGE value=\"Done (#53) WITHOUT TESTS.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Done (#53) WITHOUT TESTS.\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/trading_system$StoreTest.ic\" NAME=\"StoreTest Coverage Results\" MODIFIED=\"1680968615168\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>BGU.Group13B.backend.storePackage.*</FILTER>\r\n    </SUITE>\r\n    <SUITE FILE_PATH=\"coverage/trading_system$Main.ic\" NAME=\"Main Coverage Results\" MODIFIED=\"1680682126010\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>BGU.Group13B.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f689dc9201a61d5b4d91d69a467d1544d095986e)
+++ b/.idea/workspace.xml	(date 1682077039871)
@@ -5,11 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="3436d65a-5e76-4e77-818d-f39d961d7bb1" name="Changes" comment="Done (#53) WITHOUT TESTS.">
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_39_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_39_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_42_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_42_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_44_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_44_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_50_PM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_50_PM__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_50_PM__Changes_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_4_16_2023_7_50_PM__Changes_1.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/test/java/BGU/Group13B/backend/User/UserTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_4_20_2023_11_54_AM__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_4_20_2023_11_54_AM__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/BGU/Group13B/service/Session.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/BGU/Group13B/service/Session.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -19,17 +18,17 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
-        <option value="JUnit5 Test Class" />
         <option value="Record" />
         <option value="Interface" />
         <option value="Class" />
+        <option value="JUnit5 Test Class" />
       </list>
     </option>
   </component>
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="master" />
+        <entry key="$PROJECT_DIR$" value="logAsGuest" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -92,6 +91,7 @@
       <recent name="" />
     </key>
     <key name="CreateTestDialog.RecentsKey">
+      <recent name="BGU.Group13B.backend.User" />
       <recent name="BGU.Group13B.service" />
       <recent name="BGU.Group13B.backend.storePackage" />
       <recent name="BGU.Group13B" />
@@ -138,8 +138,10 @@
     <recent_temporary>
       <list>
         <item itemvalue="JUnit.StoreTest" />
+        <item itemvalue="JUnit.BGU.Group13B.backend.storePackage in trading-system" />
         <item itemvalue="JUnit.All in TradingSystemProject" />
-        <item itemvalue="JUnit.BGU.Group13B.backend.storePackage in trading-system" />
+        <item itemvalue="JUnit.StoreTest" />
+        <item itemvalue="JUnit.All in TradingSystemProject" />
       </list>
     </recent_temporary>
   </component>
