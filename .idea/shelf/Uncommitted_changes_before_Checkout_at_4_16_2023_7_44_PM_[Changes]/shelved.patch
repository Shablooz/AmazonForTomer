Index: src/main/java/BGU/Group13B/service/Session.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package BGU.Group13B.service;\r\n\r\nimport BGU.Group13B.backend.Repositories.Implementations.UserRepositoryImpl.UserRepositoryAsHashmap;\r\nimport BGU.Group13B.backend.SystemInfo;\r\nimport BGU.Group13B.backend.User.User;\r\nimport BGU.Group13B.backend.User.UserPermissions;\r\nimport BGU.Group13B.backend.storePackage.Market;\r\nimport BGU.Group13B.backend.storePackage.permissions.NoPermissionException;\r\n\r\nclass Session implements ISession {\r\n    private final Market market;\r\n    UserRepositoryAsHashmap userRepositoryAsHashmap;\r\n    public Session(Market market) {\r\n        this.market = market;\r\n    }\r\n\r\n    @Override\r\n    public void addProduct(int userId, String productName, int quantity, double price, int storeId) throws NoPermissionException {\r\n        market.addProduct(userId, productName, quantity, price, storeId);\r\n    }\r\n\r\n    @Override\r\n    public void addToCart(int userId, int storeId, int productId, int quantity) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void purchaseProductCart(int userId, String address, String creditCardNumber, String creditCardMonth, String creditCardYear, String creditCardHolderFirstName, String creditCardHolderLastName, String creditCardCcv, String id, String creditCardType) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void purchaseProposalSubmit(int userId, int storeId, int productId, double proposedPrice) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void immediatePurchase(int userId, int storeId, int productId, int quantity) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void createLotteryPurchaseForProduct(int storeManagerId, int storeId, int productId) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void participateInLotteryPurchase(int userId, int storeId, int productId, double fraction) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void auctionPurchase(int userId, int storeId, int productId, double price) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public SystemInfo getSystemInformation(int adminId) {\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void register(int userId,String username, String password, String email) {\r\n        User user = userRepositoryAsHashmap.getUser(userId);\r\n        synchronized (user) {\r\n                try {\r\n                    //the first if might not be necessary when we will connect to web\r\n                    if(!user.isRegistered()) {\r\n                        if(userRepositoryAsHashmap.checkIfUserExists(username) != null) {\r\n                            user.register(username, password, email);\r\n                        }else{\r\n                            System.out.println(\"user with this username already exists!\");\r\n                        }\r\n                    }else{\r\n                        System.out.println(\"already registered!\");\r\n                    }\r\n                }catch(Exception e){\r\n                    System.out.println(e.getMessage());\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n    @Override\r\n    public int login(int userID,String username, String password) {\r\n        try{\r\n            //gets the user that we want to log into\r\n            User user = userRepositoryAsHashmap.checkIfUserExists(username);\r\n            user.login(username,password);\r\n            //removes the current guest profile to swap to the existing member one\r\n            userRepositoryAsHashmap.removeUser(userID);\r\n            //gets the new id - of the user we logging into\r\n            return userRepositoryAsHashmap.getUserId(user);\r\n        }catch (Exception e){\r\n            System.out.println(e.getMessage());\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/BGU/Group13B/service/Session.java b/src/main/java/BGU/Group13B/service/Session.java
--- a/src/main/java/BGU/Group13B/service/Session.java	
+++ b/src/main/java/BGU/Group13B/service/Session.java	
@@ -60,9 +60,8 @@
     }
 
     @Override
-    public void register(int userId,String username, String password, String email) {
+    public synchronized void register(int userId,String username, String password, String email) {
         User user = userRepositoryAsHashmap.getUser(userId);
-        synchronized (user) {
                 try {
                     //the first if might not be necessary when we will connect to web
                     if(!user.isRegistered()) {
@@ -77,23 +76,33 @@
                 }catch(Exception e){
                     System.out.println(e.getMessage());
                 }
-            }
+
         }
 
 
     @Override
     public int login(int userID,String username, String password) {
-        try{
+        try {
             //gets the user that we want to log into
             User user = userRepositoryAsHashmap.checkIfUserExists(username);
-            user.login(username,password);
-            //removes the current guest profile to swap to the existing member one
-            userRepositoryAsHashmap.removeUser(userID);
-            //gets the new id - of the user we logging into
-            return userRepositoryAsHashmap.getUserId(user);
-        }catch (Exception e){
+            synchronized (user) {
+                user.login(username, password);
+                //removes the current guest profile to swap to the existing member one
+                userRepositoryAsHashmap.removeUser(userID);
+                //gets the new id - of the user we logging into
+                return userRepositoryAsHashmap.getUserId(user);
+            }
+        } catch (Exception e) {
             System.out.println(e.getMessage());
             return 0;
         }
+
+    }
+
+    @Override
+    public void logout(int userID) {
+        synchronized (userRepositoryAsHashmap.getUser(userID)){
+            userRepositoryAsHashmap.getUser(userID).logout();
+        }
     }
 }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"corretto-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="corretto-17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="corretto-17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"BranchesTreeState\">\r\n    <expand>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n      <path>\r\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\r\n      </path>\r\n    </expand>\r\n    <select />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"3436d65a-5e76-4e77-818d-f39d961d7bb1\" name=\"Changes\" comment=\"adding Discount.java for the use of calculating the price.\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GithubProjectSettings\">\r\n    <option name=\"branchProtectionPatterns\">\r\n      <list>\r\n        <option value=\"master\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"C:\\Program Files\\JetBrains\\IntelliJ IDEA Community Edition 2020.2.3\\plugins\\maven\\lib\\maven3\" />\r\n        <option name=\"useMavenConfig\" value=\"true\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2NVL9aAg74nFCBYGHK0CdSKGYHb\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"last_opened_file_path\": \"C:/Users/eyalz/OneDrive/Desktop/New folder/trading-system\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"spring.configuration.checksum\": \"0bff9c3a4f5bac17f71b3dede1d050f7\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"BGU.Group13B.service\" />\r\n      <recent name=\"BGU.Group13B.backend.storePackage\" />\r\n      <recent name=\"BGU.Group13B\" />\r\n    </key>\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Shust\\OneDrive\\Documents\\First Degree\\Semester6\\Sadna\\trading-system\\src\\main\\java\\BGU\\Group13B\\backend\\Repositories\\Implementations\\StoreRepositoryImpl\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"BGU.Group13B.backend.Repositories.Interfaces\" />\r\n      <recent name=\"BGU.Group13B.backend\" />\r\n      <recent name=\"BGU.Group13B.backend.storePackage\" />\r\n      <recent name=\"BGU.Group13B.backend.User\" />\r\n      <recent name=\"BGU.Group13B.backend.Repositories.Implementations.UserRepositoryImpl\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"3436d65a-5e76-4e77-818d-f39d961d7bb1\" name=\"Changes\" comment=\"\" />\r\n      <created>1679744156433</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1679744156433</updated>\r\n      <workItem from=\"1679744157803\" duration=\"222000\" />\r\n      <workItem from=\"1679745042519\" duration=\"232000\" />\r\n      <workItem from=\"1679745836554\" duration=\"107000\" />\r\n      <workItem from=\"1680599750928\" duration=\"13707000\" />\r\n      <workItem from=\"1680681882942\" duration=\"16736000\" />\r\n      <workItem from=\"1681634067663\" duration=\"2346000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"save work\">\r\n      <created>1680688726166</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680688726166</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"updating  interfaces in order to create the tests infrastructure\">\r\n      <created>1680812708684</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680812708684</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"please review :)\">\r\n      <created>1680813374544</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680813374544</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"adding Discount.java for the use of calculating the price.\">\r\n      <created>1680879711169</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680879711169</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"interfaces_for_discount\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"save work\" />\r\n    <MESSAGE value=\"updating  interfaces in order to create the tests infrastructure\" />\r\n    <MESSAGE value=\"please review :)\" />\r\n    <MESSAGE value=\"adding Discount.java for the use of calculating the price.\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"adding Discount.java for the use of calculating the price.\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/trading_system$Main.ic\" NAME=\"Main Coverage Results\" MODIFIED=\"1680682126010\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\r\n      <FILTER>BGU.Group13B.*</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -23,7 +23,7 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="3436d65a-5e76-4e77-818d-f39d961d7bb1" name="Changes" comment="adding Discount.java for the use of calculating the price.">
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/BGU/Group13B/service/Session.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/BGU/Group13B/service/Session.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -40,6 +40,19 @@
     </option>
   </component>
   <component name="Git.Settings">
+    <excluded-from-favorite>
+      <branch-storage>
+        <map>
+          <entry type="LOCAL">
+            <value>
+              <list>
+                <branch-info repo="$PROJECT_DIR$" source="master" />
+              </list>
+            </value>
+          </entry>
+        </map>
+      </branch-storage>
+    </excluded-from-favorite>
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
         <entry key="$PROJECT_DIR$" value="master" />
@@ -71,20 +84,20 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "last_opened_file_path": "C:/Users/eyalz/OneDrive/Desktop/New folder/trading-system",
-    "node.js.detected.package.eslint": "true",
-    "node.js.detected.package.tslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "spring.configuration.checksum": "0bff9c3a4f5bac17f71b3dede1d050f7",
-    "vue.rearranger.settings.migration": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/Users/eyalz/OneDrive/Desktop/New folder/trading-system&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;spring.configuration.checksum&quot;: &quot;0bff9c3a4f5bac17f71b3dede1d050f7&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CreateTestDialog.RecentsKey">
       <recent name="BGU.Group13B.service" />
